%%

%INPUT : 
%OUTPUT : interaction_wrench,aerodinamic_wrench

%interaction_wrench and aerodinamic_wrench'll be discriminated by this
%algorithm, that use the function described below and apply a contact
%detection system to figure out when the wrench is caused by an external interaction
function [interaction_wrench,aerodinamic_wrench] = Wrench_Discimination(x1,xn)

%somewhere we have to use 
% Drug_Blade_Model
% Torque_Model
% Contact_Detection
% Contact Localization

end



%%

%INPUT : coefficient_matrix,air_speed,propeller_speed_w
%OUTPUT : aerodinamic_force

%aerodinamic_force, is estimated the aerodinamic force generated by the
%interaction with the air, must be cosidered both propeller speed and
%air_speed, a coefficient matrix is given.

function [aerodinamic_force] = Drug_Blade_Model(coefficient_matrix,air_speed,propeller_speed_w)



end



%%

%INPUT : parameters_model,aerodinamic_force
%OUTPUT

%parameters_model, depends on the aerodinamics of the model, this matrix is
%modelled using a wind tunnel experiment
%aerodinamic_force, computed using the function defined above called Drug_Blade_Model

function [aerodinamic_torque] = Torque_Model(parameters_model,aerodinamic_force)



end




%%

%INPUT : 
%OUTPUT :


function [interaction_wrench,aerodinamic_wrench] = Contact_Localization(x1,xn)



end

%%

%INPUT : 
%OUTPUT : 


function [interaction_wrench,aerodinamic_wrench] = Contact_Detection(x1,xn)



end





